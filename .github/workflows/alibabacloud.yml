name: Build And Deploy To Aliyun ECS

on: # 該 CI/CD 觸發時的事件
  pull_request:
    types: [ closed ]
    branches: [ master ] # 當一個指向 master 分支的 PR 被關閉時觸發
  workflow_dispatch: {} # 允許在 GitHub Actions 頁面手動觸發此工作流（可用于回滾）

jobs: # 需要執行的任務
  build-and-deploy: # 將任務名修改得更清晰
    # 修改後的條件：當 PR 被合併 或 當工作流被手動觸發時，才運行此任務
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest # github分配的運行平台
    steps: # 任務的一系列步驟

      # 第 1 步：拉取程式碼
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          ref: master
          submodules: true

      # 第 2 步：設定 Node.js 環境為 v18，以確保依賴相容性
      - name: Setup Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm' # 使用快取加快後續建置速度

      # 第 3 步：使用 npm ci 進行乾淨的依賴安裝
      - name: Install Dependencies
        run: npm ci

      # 第 4 步：執行程式碼格式化檢查與修復
      - name: Lint and Fix
        run: npm run lint -- --fix

      # 第 5 步：執行建置命令
      - name: Build Project
        run: npm run build # 這會產生一個 dist 目錄

      # 第 6 步：在部署前備份並清空舊版本目錄
      - name: Backup and Clear old version on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            TIMESTAMP=$(date +%Y%m%d_%H%M%S)
            BACKUP_DIR="/usr/local/tomcat9/webapps/backups"
            TARGET_DIR="/usr/local/tomcat9/webapps/tools"
            # 確保備份目錄存在
            mkdir -p ${BACKUP_DIR}
            # 如果目標目錄存在，則執行備份和清空
            if [ -d "${TARGET_DIR}" ]; then
              echo "Backing up ${TARGET_DIR} to ${BACKUP_DIR}/tools_backup_${TIMESTAMP}"
              cp -r ${TARGET_DIR} ${BACKUP_DIR}/tools_backup_${TIMESTAMP}
              echo "Clearing directory ${TARGET_DIR} for new deployment..."
              rm -rf ${TARGET_DIR}/*
            else
              echo "Target directory ${TARGET_DIR} does not exist, skipping backup."
            fi

      # 第 7 步：部署到阿里雲伺服器
      - name: Deploy to Aliyun Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }} # 阿里雲的私鑰
          ARGS: "-avzr --delete"
          # 注意這裡的 SOURCE 已經修改，末尾的 / 很重要
          # 它表示將 dist 目錄下的所有內容同步過去，而不是 dist 目錄本身
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }} # 阿里雲的 ip
          REMOTE_USER: ${{ secrets.REMOTE_USER }} # 阿里雲使用者
          TARGET: "/usr/local/tomcat9/webapps/tools" # 被部署的伺服器路徑

